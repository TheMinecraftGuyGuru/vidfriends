name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  GO_VERSION_FILE: backend/go.mod
  FALLBACK_GO_VERSION: '1.21'
  NODE_VERSION: '18'

jobs:
  go-tests:
    name: Go Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version-file: ${{ env.GO_VERSION_FILE }}
          fallback-go-version: ${{ env.FALLBACK_GO_VERSION }}

      - name: Run Go unit tests
        working-directory: backend
        run: |
          if [ -f go.mod ]; then
            go test ./...
          else
            echo "No Go module found in backend/. Skipping Go tests."
          fi

      - name: Run Go vet
        working-directory: backend
        run: |
          if [ -f go.mod ]; then
            go vet ./...
          else
            echo "No Go module found in backend/. Skipping go vet."
          fi

  frontend-tests:
    name: Frontend Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: frontend/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: frontend
        run: |
          if [ ! -f package.json ]; then
            echo "No frontend/package.json found. Skipping frontend tests."
            exit 0
          fi
          corepack enable pnpm
          pnpm install --frozen-lockfile

      - name: Run unit tests
        if: hashFiles('frontend/package.json') != ''
        working-directory: frontend
        run: pnpm vitest run

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: frontend/pnpm-lock.yaml

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version-file: ${{ env.GO_VERSION_FILE }}
          fallback-go-version: ${{ env.FALLBACK_GO_VERSION }}

      - name: Prepare pnpm
        run: corepack enable pnpm

      - name: Run lint checks
        run: bash scripts/lint.sh

  type-checks:
    name: Type Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: frontend/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: frontend
        run: |
          if [ ! -f package.json ]; then
            echo "No frontend/package.json found. Skipping type checks."
            exit 0
          fi
          corepack enable pnpm
          pnpm install --frozen-lockfile

      - name: Run TypeScript type checks
        if: hashFiles('frontend/package.json') != ''
        working-directory: frontend
        run: pnpm run typecheck
