name: Container Images

on:
  push:
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Build and publish ${{ matrix.service }}
    runs-on: self-hosted
    strategy:
      matrix:
        include:
          - service: backend
            dockerfile: deploy/docker/backend.Dockerfile
            context: .
          - service: frontend
            dockerfile: deploy/docker/frontend.Dockerfile
            context: .
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare image name
        id: prep
        run: |
          OWNER_LC=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          REPO_NAME=${GITHUB_REPOSITORY#*/}
          REPO_LC=$(echo "${REPO_NAME}" | tr '[:upper:]' '[:lower:]')
          echo "image=ghcr.io/${OWNER_LC}/${REPO_LC}-${{ matrix.service }}" >> "$GITHUB_OUTPUT"

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.prep.outputs.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
          labels: |
            org.opencontainers.image.title=VidFriends ${{ matrix.service }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          provenance: false
          sbom: false

      - name: Publish build summary
        if: success()
        run: |
          echo "### ${{ matrix.service }} image" >> "$GITHUB_STEP_SUMMARY"
          echo "Image: \`${{ steps.prep.outputs.image }}\`" >> "$GITHUB_STEP_SUMMARY"
          echo "Tags:" >> "$GITHUB_STEP_SUMMARY"
          while IFS= read -r tag; do
            echo "- \`${tag}\`" >> "$GITHUB_STEP_SUMMARY"
          done <<< "${{ steps.meta.outputs.tags }}"
